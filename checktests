#!/bin/sh
: ${CC:=clang}
: ${CXX:=$CC}
: ${CFLAGS:=}
CPPFLAGS='-Wno-unused -include testprefix.h -IBlocksRuntime'
CCFLAGS='-std=c99'
LIB=libBlocksRuntime.a
TESTDIR=testbin
rm -rf $TESTDIR
mkdir $TESTDIR
if ! "$CC" --version >/dev/null 2>&1; then
  echo "$CC" not installed
  exit 1
else
  if ("$CC" -fblocks -c -o /dev/null -x c - < /dev/null 2>&1 || echo '-fblocks') 2>&1 | grep -q -- -fblocks; then
    echo "$CC" does not support the -fblocks option
    exit 1
  fi
fi
if "$CXX" --version >/dev/null 2>&1; then
  dopp=1
  if ("$CXX" -fblocks -c -o /dev/null -x c - < /dev/null 2>&1 || echo '-fblocks') | grep -q -- -fblocks; then
    echo "$CXX" does not support the -fblocks option
    exit 1
  fi
else
  echo "$CXX" not installed -- skipping C++ tests
fi
if [ ! -r "$LIB" ]; then
  echo "No $LIB file found, try running $(dirname "$0")/buildlib first"
  exit 1
fi
failcount=0
testsfailed=
for test in BlocksRuntime/tests/*.[cC]; do
  skip=
  skipdoze=
  extra=
  stub=
  println=
  xfail=
  pmsg='should PASS'
  fmsg='should FAIL'
  case $test in
    */rdar6405500.c | \
    */rdar6414583.c | \
    */objectRRGC.c | \
    */dispatch_async.c) skip=1;;
    */fail.c) skipdoze=1;;
    */macro.c) stub='void foo(); int main(){foo(); printf("success");}'; println=1;;
    */cast.c | \
    */voidarg.c) println=1;;
    */varargs-bad-assign.c | \
    */rettypepromotion.c | \
    */shorthandexpression.c | \
    */k-and-r.c | \
    */sizeof.c | \
    */orbars.c | \
    */constassign.c) xfail=1;;
  esac
  ext=.c
  cpp=
  USECC="$CC"
  USEFLAGS="$CCFLAGS $CPPFLAGS"
  USELIB="$LIB"
  case $test in
    *.C)   cpp=1; ext=.C;;
    *.cpp) cpp=1; ext=.cpp;;
    *.cp)  cpp=1; ext=.cp;;
    *.c++) cpp=1; ext=.c++;;
  esac
  if [ -n "$cpp" ]; then
    USECC="$CXX"
    USEFLAGS="$CPPFLAGS"
    USELIB="$LIB -lstdc++"
  fi
  if [ -n "$COMSPEC" -a -n "$skipdoze" ]; then
    skip=1
  fi
  if [ -z "$skip" -a -n "$cpp" -a -z "$dopp" ]; then
    echo "skipping $test ("$CXX" not installed)"
  else
    if [ -n "$skip" ]; then
      echo skipping $test
    else
      if [ -n "$xfail" ]; then
        echo "--- $(basename $test) ($fmsg) ---"
      else
        echo "--- $(basename $test) ($pmsg) ---"
      fi
      if [ -n "$stub" ]; then
        "$USECC" -c $CFLAGS $USEFLAGS $extra -o $TESTDIR/$(basename $test $ext).o -fblocks $test && \
        echo "$stub" | "$USECC" $CFLAGS $USEFLAGS $extra -o $TESTDIR/$(basename $test $ext) -fblocks \
          $TESTDIR/$(basename $test $ext).o $USELIB -x c - && \
        $TESTDIR/$(basename $test $ext)
      else
        "$USECC" -c $CFLAGS $USEFLAGS $extra -o $TESTDIR/$(basename $test $ext).o -fblocks $test && \
        "$USECC" $CFLAGS -o $TESTDIR/$(basename $test $ext) -fblocks $TESTDIR/$(basename $test $ext).o $USELIB && \
        $TESTDIR/$(basename $test $ext)
      fi
      result=$?
      if [ -n "$println" ]; then
        echo ''
      fi
      if [ $result = 0 -a -n "$xfail" ]; then
        echo ''
        echo "*"
        echo "**"
        echo "*** ^FAILURE: expect FAIL test PASSED! ***"
        echo "**"
        echo "*"
        echo ''
        testsfailed=1
	failcount=$(($failcount + 1))
      fi
      if [ $result != 0 -a -z "$xfail" ]; then
        echo ''
        echo "*"
        echo "**"
        echo "*** ^FAILURE: expect PASS test FAILED! ***"
        echo "**"
        echo "*"
        echo ''
        testsfailed=1
	failcount=$(($failcount + 1))
      fi
    fi
  fi
done
if [ -n "$testsfailed" ]; then
  echo ''
  echo "*"
  echo "**"
  echo "*** WARNING: Some failures($failcount) occurred, look for '*** ^FAILURE:' lines above"
  echo "**"
  echo "*"
  echo ''
  exit 1
fi
echo "*** All tests passed ***"
exit 0
